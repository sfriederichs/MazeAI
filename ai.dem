Slow = 1;
StartLoc = 2,19;
GoalLoc = 19,1;
BotLoc = 2,19;
Traits = 1,1,1,1,1;
AINum = 1;
Goal = 1;
MaxTime = 350;
LoadMap 2;
Text = This AI is called a step taking algorithm. This, means it has no knowledge of anything but its, immediate surroundings. It has no knowledge, of the entire map. It can only make, decisions based upon what's in front of it.;
Redraw;
Pause 6;
Text = When faced with no obstruction the bot will, simply move towards its goal along the X axis, then the Y axis to its goal as shown here.;
Redraw;
Pause 4;
GameLoop;
Action ;
Pause 2;
Text = This is because of a system of two goals: one, for the X axis (1) and another for the Y axis, (-1).  To resolve these goals it must get as, close as possible to the end of the maze on, that axis.;
Redraw;
Pause 6;
LoadMap 3;
BotLoc = 2,11;
NextLoc = -1,-1;
Text = But when faced with an obstruction...;
Redraw;
Pause 3;
BotLoc = 3,11;
Redraw;
BotLoc = 4,11;
Redraw;
BotLoc = 5,11;
Redraw;
BotLoc = 6,11;
Redraw;
BotLoc = 7,11;
Redraw;
BotLoc = 8,11;
Redraw;
BotLoc = 9,11;
Redraw;
BotLoc = 10,11;
Redraw;
Text = It must make a decision about which way to, go to get around it.;
Pause 1;
Redraw;
Pause 3;
Text = It bases this decision on five 'Traits', which can have values of 1 or 2 or 3. In most, cases 1 means 'Always do this' 3 means, 'Always do the opposite of that' and 2, random chooses between those two choices.;
Redraw;
Pause 5;
Text = The first trait is Resolutness.;
Redraw;
Pause 3;
Text = If the bot is not Resolute it will, switch its axis goals in an attempt to move, around the block. If it is Resolute it, will keep its axis goal and use its, other traits to move around the block.;
Redraw;
Pause 6;
Goal = -1;
Resolute = 0;
Text = This bot is not Resolute (Res 0) and has, decided to switch to its goal to the Y axis, (Goal: -1).  Watch what happens.;
Redraw;
Pause 4;
BotLoc = 10,9;
Redraw;
BotLoc = 10,8;
Redraw;
BotLoc = 10,7;
Redraw;
BotLoc = 10,6;
Redraw;
BotLoc = 10,5;
Redraw;
BotLoc = 10,4;
Redraw;
BotLoc = 10,3;
Redraw;
BotLoc = 10,2;
Redraw;
Botloc = 10,1;
Redraw;
BotLoc = 10,0;
Redraw;
Text = The bot resolved its Y axis goal before the X, axis because it was not resolute.;
Redraw;
Pause 3;
Text = However if the bot had been Resolute it would, have attempted to use its other traits to get, around the block.;
Redraw;
Pause 3;
Text = This brings us to the next trait: Thriftyness.;
BotLoc = 10,10;
Redraw;
Pause 2;
Text = When the bot is Thrifty it uses the opportunity, of a block on its main axis (in this case the X, axis) to move closer to the end on its, secondary axis (in this case Y axis).;
Redraw;
Pause 4;
Thrifty = 1;
Redraw;
Text = Because this bot is thrifty (Thr 1) it will move, along the Y axis towards the end of the maze.;
Redraw;
Pause 3;
BotLoc = 10,10;
Redraw;
BotLoc = 10,9;
Redraw;
Pause 2;
Text = Sometimes Thriftyness can not be used or the, bot doesn't want to use it.  In these cases it, defaults to using Updown which is the next, trait.;
Redraw;
Pause 3;
Text = Updown is called such because it determines, whether the bot increments its position on its, OPPOSITE axis by +1 (Upd 1) or -1 (Upd 0).;
Redraw;
Pause 4;
BotLoc = 10,10;
Updown = 1;
Text = Updown as 1;
Redraw;
Pause 2;
BotLoc = 10,9;
Redraw;
Pause 1;
Text = Updown as 0;
BotLoc = 10,10;
Updown = 0;
Redraw;
Pause 2;
BotLoc = 10,11;
Redraw;
Pause 1;
